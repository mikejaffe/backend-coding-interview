---
openapi: 3.0.1
info:
  title: Photos API V1
  version: v1
  description: A RESTful API for photo management with user authentication
paths:
  "/api/v1/photographers":
    get:
      summary: List photographers
      tags:
      - Photographers
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
      - name: name
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: filtered by name
    post:
      summary: Create photographer
      tags:
      - Photographers
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photographer:
                  type: object
                  properties:
                    name:
                      type: string
                    external_id:
                      type: string
                    external_service:
                      type: string
  "/api/v1/photographers/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Get photographer
      tags:
      - Photographers
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: found
        '404':
          description: not found
    put:
      summary: Update photographer
      tags:
      - Photographers
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photographer:
                  type: object
                  properties:
                    name:
                      type: string
    delete:
      summary: Delete photographer
      tags:
      - Photographers
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: deleted
  "/api/v1/photos":
    get:
      summary: List photos
      tags:
      - Photos
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
      - name: per_page
        in: query
        required: false
        schema:
          type: integer
      - name: photographer_id
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: filtered by photographer
    post:
      summary: Create photo
      tags:
      - Photos
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '201':
          description: created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: object
                  properties:
                    photographer_id:
                      type: integer
                    external_id:
                      type: string
                    width:
                      type: integer
                    height:
                      type: integer
                    src_urls:
                      type: object
  "/api/v1/photos/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: integer
    get:
      summary: Get photo
      tags:
      - Photos
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: found
        '404':
          description: not found
    put:
      summary: Update photo
      tags:
      - Photos
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: updated
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: object
                  properties:
                    width:
                      type: integer
                    height:
                      type: integer
    delete:
      summary: Delete photo
      tags:
      - Photos
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '200':
          description: deleted
  "/api/v1/login":
    post:
      summary: Login
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: success
        '401':
          description: invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                session:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
  "/api/v1/logout":
    delete:
      summary: Logout
      tags:
      - Authentication
      security:
      - Bearer: []
      parameters:
      - name: Authorization
        in: header
        schema:
          type: string
      responses:
        '204':
          description: logged out
  "/api/v1/signup":
    post:
      summary: Sign Up
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: validation error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
servers:
- url: http://localhost:3000
  description: Development server
components:
  securitySchemes:
    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: 'API token for authentication. Format: Bearer YOUR_TOKEN'
